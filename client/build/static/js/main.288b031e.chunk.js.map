{"version":3,"sources":["components/BookCard.js","components/BookList.js","components/SearchBox.js","components/Books.js","utilities/API.js","components/Results.js","components/SavedPage.js","components/SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["BookCard","props","volumeInfo","info","title","authors","thumbNail","subtitle","publishedDate","hasOwnProperty","imageLinks","thumbnail","publishYear","className","src","alt","substring","type","BookList","books","map","book","key","id","SearchBox","onSubmit","handleSubmit","onChange","handleChange","placeholder","value","sort","handleSort","disabled","selected","Books","e","preventDefault","request","get","query","q","state","searchField","then","data","console","log","setState","body","items","target","filteredBooks","this","a","b","parseInt","Component","axios","delete","result","bookData","post","Results","savedBooks","handleSave","_id","includes","API","deletedBook","filter","catch","err","error","savedBook","concat","length","image","description","href","link","onClick","SavedPage","SearchPage","App","headerLinks","path","search","saved","Container","fluid","Navbar","Brand","Toggle","aria-controls","Collapse","Nav","to","exact","render","subTitle","text","searchtext","React","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.288b031e.chunk.js","sourcesContent":["//\nimport React from 'react';\n\n\nconst BookCard = (props) => {\n    const { volumeInfo } = props.info;\n    const {title, authors, subtitle, publishedDate} = props.info.volumeInfo;\n    const thumbNail = volumeInfo.hasOwnProperty('imageLinks') === false ? \"https://upload.wikimedia.org/wikipedia/commons/6/64/Poster_not_available.jpg\" : volumeInfo.imageLinks.thumbnail;\n    const publishYear = volumeInfo.hasOwnProperty('publishedDate') === false ? volumeInfo['publishedDate'] = \"0000\" : volumeInfo.publishedDate;\n\n    return (\n      \n      <div className=\"card-container\">\n        <img src={thumbNail} alt=\"\"/>\n        <div className=\"desc\">\n          <h2>{title}</h2>\n          <h3>Author: {authors}</h3>\n          <p>Published: {publishYear === \"0000\" ? \"Not available\" : publishYear.substring(0,4)}</p> \n          <button type=\"save\">Save</button>  \n\n        </div>\n      </div>\n      \n      \n    );\n}\n\nexport default BookCard;","//\nimport React from 'react';\nimport BookCard from './BookCard';\n\n\nconst BookList = (props) => {\n    return (\n      <div className=\"list\">\n        {\n          props.books.map((book) => {\n            return <BookCard key={book.id} info={book} />\n          })\n        }\n      </div>\n      \n    );\n}\n\nexport default BookList;","//\nimport React from 'react';\n\n\nconst SearchBox = (props) => {\n\n    return (\n        <div className=\"search-area\">\n        <form onSubmit={props.handleSubmit}>\n            <input onChange={props.handleChange} placeholder=\"Search books\" type=\"text\"/>\n            <button type=\"submit\">Search</button>\n            <select value={props.sort} onChange={props.handleSort} >\n                <option value=\"\" disabled selected>Sort</option>\n                <option value=\"Newest\">Newest</option>\n                <option value=\"Oldest\">Oldest</option>\n            </select>\n        </form>\n        </div>\n      \n    );\n}\n\nexport default SearchBox;","//\n\nimport React, { Component } from 'react';\nimport BookList from './BookList';\nimport SearchBox from './SearchBox';\nimport request from 'superagent';\n\nclass Books extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            books: [],\n            searchField: '',\n            sort: ''\n        }\n    }\n    // componentDidMount() {\n    //     request\n    //         .get(\"https://www.googleapis.com/books/v1/volumes\")\n    //         .query({ q: this.state.searchField })\n    //         .then((data) => {\n    //             this.setState({ books: [...data.body.items] })\n    //         })\n    // }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        request\n            .get(\"https://www.googleapis.com/books/v1/volumes\")\n            .query({ q: this.state.searchField })\n            .then((data) => {\n                console.log(data);\n                this.setState({ books: [...data.body.items] })\n        })\n    }\n\n    handleChange = (e) => {\n        this.setState({ searchField: e.target.value })\n    }\n\n    handleSort = (e) => {\n        this.setState({ sort: e.target.value});\n    }\n    \n\n    render() {\n        const filteredBooks = this.state.books.sort((a, b) => {\n            if(this.state.sort === 'Newest'){\n                console.log(\"in newest\")\n                return parseInt(b.volumeInfo.publishedDate.substring(0, 4)) - parseInt(a.volumeInfo.publishedDate.substring(0, 4));\n            }\n            else if(this.state.sort === 'Oldest'){\n                return parseInt(a.volumeInfo.publishedDate.substring(0, 4)) - parseInt(b.volumeInfo.publishedDate.substring(0, 4));\n            }\n          \n          return;\n        })\n\n        return (\n            <div className=\"wrapper\">\n                <SearchBox \n                    data={this.state} \n                    handleSubmit={this.handleSubmit} \n                    handleChange={this.handleChange} \n                    handleSort={this.handleSort}\n                />\n                <BookList books={filteredBooks}/>\n            </div>\n        );\n    }\n}\n\nexport default Books;","import axios from \"axios\";\n\nexport default {\n  \n  // Deletes the book with the given id\n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id).then(result => result.data);\n  },\n  // Saves a book to the database\n  saveBook: function (bookData) {\n    return axios.post(\"/api/books\", bookData).then(result => result.data);\n  },\n  // Get the saved a books from the database\n  savedBooks: function () {\n    return axios.get(\"/api/books\").then(result => result.data);\n  }\n};","import React, { Component } from \"react\";\nimport API from \"../utilities/API\";\n\nclass Results extends Component {\n\n    state = {\n        savedBooks: [],\n    }\n\n    componentDidMount() {\n        API.savedBooks()\n            .then(savedBooks => this.setState({ savedBooks: savedBooks }))\n            .catch(err => console.error(err));\n    }\n\n    handleSave = book => {\n\n        if (this.state.savedBooks.map(book => book._id).includes(book._id)) {\n            API.deleteBook(book._id)\n                .then(deletedBook => this.setState({ savedBooks: this.state.savedBooks.filter(book => book._id !== deletedBook._id) }))\n                .catch(err => console.error(err));\n        } else {\n            API.saveBook(book)\n                .then(savedBook => this.setState({ savedBooks: this.state.savedBooks.concat([savedBook]) }))\n                .catch(err => console.error(err));\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.props.books.length ? (\n                    <h1 className=\"text-center\">No Books Saved Yet!</h1>\n                ) : (\n                        <div>\n                            {this.props.books.map(result => (\n                                <div className=\"card mb-3\" key={result._id}>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-2\">\n                                            <img alt={result.title} className=\"img-fluid\" src={result.image} />\n                                        </div>\n                                        <div className=\"col-md-10\">\n                                            <div className=\"card-body\">\n                                                <h5 className=\"card-title\">{result.title} by {result.authors}</h5>\n                                                <p className=\"card-text\">{result.description}</p>\n                                                <div>\n                                                    <a href={result.link} className=\"btn badge-pill btn-outline-dark mt-3\" target=\"_blank\" >View</a>\n                                                    <button onClick={() => this.handleSave(result)} className=\"btn badge-pill btn-outline-warning mt-3 ml-3\" >\n                                                        {this.state.savedBooks.map(book => book._id).includes(result._id) ? \"Unsave\" : \"Save\"}\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n            </div>\n        )\n    }\n}\n\nexport default Results;","import React, { Component }from 'react';\n\nimport \"./styles.css\";\nimport API from \"../utilities/API\";\nimport Results from \"../components/Results\";\n\n\nclass SavedPage extends Component {\n    state = {\n        savedBooks: [],\n    }\n\n    componentDidMount() {\n        API.savedBooks()\n        .then(savedBooks => this.setState({ savedBooks: savedBooks }))\n        .catch(err => console.error(err))\n    }\n\n    render() {\n    return (\n    <div className=\"container\">\n        <h2>Saved Books!</h2>\n        <Results books={this.state.savedBooks} />\n        \n\n    </div>\n    );\n}\n}\n\nexport default SavedPage;","import React from 'react';\n\n\n\nfunction SearchPage(props) {\n\n    return (\n    <div>\n    \n        \n    </div>\n    );\n}\n\nexport default SearchPage;","import React from 'react';\n\n import Books from './components/Books';\nimport Navbar from 'react-bootstrap/Navbar';\n import Nav from 'react-bootstrap/Nav';\nimport {BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\n import SavedPage from './components/SavedPage';\n import SearchPage from './components/SearchPage';\n\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n      headerLinks: [\n        { title: 'Search', path: '/' },\n        { title: 'Saved', path: '/saved' },\n      ],\n      search: {\n        title: 'Search'\n      },\n      saved: {\n        title: 'Saved'\n      }\n\n    }\n  }\n\n  render() {\n    return (\n      \n      \n      \n        \n    \n       <div className=\"App\">\n        {/* <Header /> */}\n        \n        <Router>\n      <Container className=\"p-0\" fluid={true}>\n\n        <Navbar className=\"\">\n          <Navbar.Brand>Google Books</Navbar.Brand>\n          \n\n           <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\n          <Navbar.Collapse id=\"navbar-toggle\">\n            <Nav className= \"ml-auto\" >\n              <Link className=\"nav-link\" to=\"/\">Search</Link>\n              <Link className=\"nav-link\" to=\"/saved\">Saved</Link>\n              \n            </Nav>\n          </Navbar.Collapse> \n        </Navbar>\n\n          <Route path = \"/\" exact render={() => <SearchPage title={this.state.search.title} subTitle={this.state.search.subTitle} text={this.state.searchtext} />} />\n        <Route path = \"/saved\" exact render={() => <SavedPage title={this.state.saved.title} /> } />  \n        </Container>\n    </Router>\n    \n         <Books /> \n         </div> \n  \n        \n      \n\n\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","  \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}